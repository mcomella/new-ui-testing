#filter substitution
package @ANDROID_PACKAGE_NAME@.tests;

/* Test correct state for URL bar after loading pages.
 */
public class testNewTabHistory extends UITest {
    public void testNewTabHistory() {
        UITestCommon.blockForGeckoReady();

        UITestCommon.enterAndLoadUrl(UITestCommon.BLANK01_URL);
        assertTrue(TOOLBAR.hasTitle(UITestCommon.BLANK01_TITLE));
        assertTrue(TOOLBAR.hasUrl(UITestCommon.BLANK01_URL));

        UITestCommon.enterAndLoadUrl(UITestCommon.BLANK02_URL);
        assertTrue(TOOLBAR.hasTitle(UITestCommon.BLANK02_TITLE));
        assertTrue(TOOLBAR.hasUrl(UITestCommon.BLANK02_URL));

        UITestCommon.enterAndLoadUrl(UITestCommon.BLANK03_URL);
        assertTrue(TOOLBAR.hasTitle(UITestCommon.BLANK03_TITLE));
        assertTrue(TOOLBAR.hasUrl(UITestCommon.BLANK03_URL));

        UITestCommon.goBack();
        assertTrue(TOOLBAR.hasTitle(UITestCommon.BLANK02_TITLE));
        assertTrue(TOOLBAR.hasUrl(UITestCommon.BLANK02_URL));

        UITestCommon.goBack();
        assertTrue(TOOLBAR.hasTitle(UITestCommon.BLANK01_TITLE));
        assertTrue(TOOLBAR.hasUrl(UITestCommon.BLANK01_URL));

        UITestCommon.goForward();
        assertTrue(TOOLBAR.hasTitle(UITestCommon.BLANK02_TITLE));
        assertTrue(TOOLBAR.hasUrl(UITestCommon.BLANK02_URL));

        UITestCommon.reload();
        assertTrue(TOOLBAR.hasTitle(UITestCommon.BLANK02_TITLE));
        assertTrue(TOOLBAR.hasUrl(UITestCommon.BLANK02_URL));
    }
}
